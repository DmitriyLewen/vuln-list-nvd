{
  "id": "CVE-2024-46693",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-09-13T06:15:14.140",
  "lastModified": "2024-09-13T06:15:14.140",
  "vulnStatus": "Received",
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: pmic_glink: Fix race during initialization\n\nAs pointed out by Stephen Boyd it is possible that during initialization\nof the pmic_glink child drivers, the protection-domain notifiers fires,\nand the associated work is scheduled, before the client registration\nreturns and as a result the local \"client\" pointer has been initialized.\n\nThe outcome of this is a NULL pointer dereference as the \"client\"\npointer is blindly dereferenced.\n\nTimeline provided by Stephen:\n CPU0                               CPU1\n ----                               ----\n ucsi-\u003eclient = NULL;\n devm_pmic_glink_register_client()\n  client-\u003epdr_notify(client-\u003epriv, pg-\u003eclient_state)\n   pmic_glink_ucsi_pdr_notify()\n    schedule_work(\u0026ucsi-\u003eregister_work)\n    \u003cschedule away\u003e\n                                    pmic_glink_ucsi_register()\n                                     ucsi_register()\n                                      pmic_glink_ucsi_read_version()\n                                       pmic_glink_ucsi_read()\n                                        pmic_glink_ucsi_read()\n                                         pmic_glink_send(ucsi-\u003eclient)\n                                         \u003cclient is NULL BAD\u003e\n ucsi-\u003eclient = client // Too late!\n\nThis code is identical across the altmode, battery manager and usci\nchild drivers.\n\nResolve this by splitting the allocation of the \"client\" object and the\nregistration thereof into two operations.\n\nThis only happens if the protection domain registry is populated at the\ntime of registration, which by the introduction of commit '1ebcde047c54\n(\"soc: qcom: add pd-mapper implementation\")' became much more likely."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: soc: qcom: pmic_glink: Corrección de la ejecución durante la inicialización Como señaló Stephen Boyd, es posible que durante la inicialización de los controladores secundarios pmic_glink, se activen los notificadores del dominio de protección y se programe el trabajo asociado, antes de que vuelva el registro del cliente y, como resultado, se haya inicializado el puntero \"cliente\" local. El resultado de esto es una desreferencia de puntero NULL ya que el puntero \"cliente\" se desreferencia ciegamente. Cronología proporcionada por Stephen: CPU0 CPU1 ---- ---- ucsi-\u0026gt;client = NULL; devm_pmic_glink_register_client() client-\u0026gt;pdr_notify(client-\u0026gt;priv, pg-\u0026gt;client_state) pmic_glink_ucsi_pdr_notify() schedule_work(\u0026amp;ucsi-\u0026gt;register_work)  pmic_glink_ucsi_register() ucsi_register() pmic_glink_ucsi_read_version() pmic_glink_ucsi_read() pmic_glink_ucsi_read() pmic_glink_send(ucsi-\u0026gt;client)  ucsi-\u0026gt;client = client // ¡Demasiado tarde! Este código es idéntico en los controladores secundarios altmode, battery manager y usci. Resuelva esto dividiendo la asignación del objeto \"cliente\" y su registro en dos operaciones. Esto solo sucede si el registro del dominio de protección se completa al momento del registro, lo que se volvió mucho más probable con la introducción del commit '1ebcde047c54 (\"soc: qcom: add pd-mapper implementation\")."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/1efdbf5323c9360e05066049b97414405e94e087",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/3568affcddd68743e25aa3ec1647d9b82797757b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/943b0e7cc646a624bb20a68080f8f1a4a55df41c",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}